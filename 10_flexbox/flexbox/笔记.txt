PC端页面使用传统布局
移动端使用flex布局

flex 是flexible box的缩写，意为“弹性布局”，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为flex布局。
    当为父盒子设置为flex布局以后，子元素的float，clear，vertical-align属性将失效
    伸缩布局=弹性布局=伸缩盒布局=flex布局
采用flex布局的元素，成为flex 容器（flex container），简称容器，它的所有子元素自动成为容器成员，成为flex项目（flex item） 简称项目。

布局原理： 通过给父盒子添加flex属性，来控制子盒子的位置和排列方式

使用flex布局第一步必须确定主轴方向。

1、容器的特性

1.1 flex-direction
语法：flex-direction: row | row-reverse | column | column-reverse;

在flex布局中，分为主轴和侧轴两个方向，默认主轴方向是x轴方向，水平向右，默认侧轴方向是y轴方向，水平向下
可取值：row，row-reverse，column，column-reverse

1.2 justify-content
语法：justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly;
设置主轴上的子元素对齐方式，
可取值：
flex-start 默认值，从头开始排列 
flex-end 从尾部开始排列
center 在主轴居中对齐
space-around 平分剩余空间，项目之间的间隔是项目与父容器边框之间间隔的两个，相当于每个项目两边都有margin
space-between 先两边贴边，再平分剩余空间，项目与父容器边框没有空间
space-evenly 均匀排列每个元素,每个元素之间的间隔相等，项目与父容器边框，项目之间的间隔都一样

flex-direction为column，justify-content为center，可以保证元素垂直居中

1.3 flex-wrap
语法：flex-wrap: nowrap | wrap | wrap-reverse;

子元素是否换行显示。默认子元素不换行。
flex布局中，默认的子元素是不换行的，如果装不下，会缩放子元素的宽度，放到父元素里面
nowrap 默认值 不换行
wrap： 换行
wrap-reverse，换行，但是第一行在底部

1.4 align-items
语法：align-items: stretch | flex-start | flex-end | center | baseline;
设置侧轴上子元素排列方式，只对单行有效！！！
可取值：
    flex-start 默认值，从上到下
    flex-end  从下到上
    center 挤在一起（垂直居中）
    stretch 拉伸，充满辅轴，如果flex子项设置了高度，则按照设置的高度值显示，而不拉伸。

1.5 align-content
语法：align-content: stretch | flex-start | flex-end | center | space-between | space-around | space-evenly;

设置侧轴上子元素排列方式，对多行（即主轴上出现换行的情况）有效，在单行下无效。
可取值：
    flex-start，默认值， 在侧轴的头部开始排列
    flex-end，在侧轴的尾部开始排列
    center 在侧轴的中间显示
    space-around 子项在侧轴平分剩余空间
    space-between 子项在侧轴先分布在两头，再平分剩余空间
    space-evenly  均匀排列每一行元素,每一行元素之间的间隔相等，行与父容器边框，行之间的间隔都一样。就是视觉上，每个flex子项两侧空白间距完全相等。每一行元素都完全上下等分。
    stretch 设置子项的高度平分父元素高度

align-content 对多行有效，align-items对单行有效

1.6 flex-flow
语法：flex-flow: <‘flex-direction’> || <‘flex-wrap’>
是flex-direction 和flex-wrap的复合写法

2、子项目的特性

2.1 order
语法：order: <integer>; /* 整数值，默认值是 0 */

定义项目的排列顺序，可以取负值。
数值越小，排的越靠前，默认为0
跟z-index不一样



2.2 align-self
控制子项自己在侧轴上的排列方式
语法：align-self: auto | flex-start | flex-end | center | baseline | stretch;

align-self允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性，
默认值为auto，表示继承父元素的aling-items，如果没有父元素，则等同于strech。


2.4 flex-grow 
语法：flex-grow: <number>; /* 数值，可以是小数，默认值是 0 ，不能为负值*/

扩展flex子项所占据的宽度，扩展所侵占的空间就是出去元素外的剩余空白间隙
不支持负值，默认为0，表示不占用剩余的空白间隙扩展自己的宽度。如果flex-grow大于0，则flex容器剩余空间的分配就发生变化，具体规则如下：
    所有剩余空间总量是1
    如果只有一个flex子项设置了flex-grow属性值
        如果flex-grow值小于1，则扩展的空间就是总剩余空间和这个比例的计算值。假设flex-grow为0.6，剩余空间为100，则扩展100*0.6 = 60
        如果flex-grow值大于等于1，则独享所有剩余空间。如果剩余空间为100，则扩展100
    如果有多个flex设置了flex-grow属性值
        如果flex-grow值总和小于1，则每个子项扩展的空间就是总剩余孔家和当前元素设置的flex-grow值小于1，则扩展的空间就是总剩余空间和这个比例的计算值。假设flex-grow分别为0.3和0.4，总的剩余空间为100，则分别扩展100*0.3 = 30，100*40 = 40
        如果flex-grow值总和大于1，则所有的剩余空间被利用，分配比例就是flex-grown属性的比例。例如所有的flex子项的flex-grow为1，则表示剩余空白间隙大家等分，如果设置的flex-grow比例为1：2：1，则剩余的空白间隙分为4分，分别占有1份，2份，1份。

2.5 flex-shrink
语法：flex-shrink: <number>; /* 数值，默认值是 1 */

主要处理当flex容器空间不足的时候，单个元素的收缩比例
flex-shrink不支持负值，默认值是1，也就是默认所有的flex子项都会收缩。如果设置为0，则表示不收缩，保持原来的fit-content宽度。
flex-shrink和flex-grow内核神似，flex-grow是空间充足时，如果利用空间，flex-shrink是空间不足时如何收缩腾出空间。
两者的规则也类似，已知flex子项不换行，且容器空间不足，不足的空间就是完全收缩的尺寸。
    如果只有一个flex子项设置了flex-shrink：
        flex-shrink值小于1，则收缩的尺寸不完全，会有一部分内容溢出flex容器，假设需要收缩100，flex-shrink为0.2，则收缩20
        flex-shrink值大于等于1，则收缩完全，正好填满flex容器。，如果需要收缩100，则收缩100
    如果多个flex子项设置了flex-shrink
        flex-shrink值的总和小于1，则收缩的尺寸不完全，每个元素收缩尺寸占"完全收缩的尺寸"的比例就是设置的flex-shrink的值。比如flex-shrink为0.3，0.4，总共需要收缩100，则分别收缩100*0.3 = 30，100*0.4 = 40
        flex-shrink值得总和大于1，则收缩完全，每个元素收缩的尺寸的比例和flex-shrink值的比例一样。

2.6 flex-basis
语法：flex-basis: <length> | auto; /* 默认值是 auto */

定义了在分配剩余空间之前元素的默认大小，相当于对浏览器提前告知：我需要占据这么大的空间，提前帮我预留好。
语法：flex-basis: length|auto 默认值为auto
默认值为auto，就是自动，如果设置的有width，则占据空间就是width，没有设置就按照内容宽度来。
如果同时设置width和flex-basis，会忽略width,使用flex-basis, flex顾名思义就是弹性的意思，因此实际上不建议对flex子项使用width属性，因为不够弹性。
当剩余空间不足的时候，flex子项的实际宽度通常不是flex-basis尺寸，因为flex布局剩余空间不足的时候默认会收缩。

2.1 flex

是flex-grow，flex-shrink,与flex-basis的简写形式。
语法：flex: none | auto | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
其中第二和第三个参数（flex-shrink，flex-basis）是可选的，默认值为 0 1 auto。
flex:none等同于flex：0 0 auto;
flex:auto等同于flex:1 1 auto;


剩余空间，就是父容器在主轴的方向上还有多少可用的空间。